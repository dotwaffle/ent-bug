// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"github.com/go-faster/jx"
)

type CreateThingHTTPReq struct {
	Age        int    `json:"age"`
	Name       string `json:"name"`
	ProbesHTTP []int  `json:"probes_http"`
}

// GetAge returns the value of Age.
func (s *CreateThingHTTPReq) GetAge() int {
	return s.Age
}

// GetName returns the value of Name.
func (s *CreateThingHTTPReq) GetName() string {
	return s.Name
}

// GetProbesHTTP returns the value of ProbesHTTP.
func (s *CreateThingHTTPReq) GetProbesHTTP() []int {
	return s.ProbesHTTP
}

// SetAge sets the value of Age.
func (s *CreateThingHTTPReq) SetAge(val int) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *CreateThingHTTPReq) SetName(val string) {
	s.Name = val
}

// SetProbesHTTP sets the value of ProbesHTTP.
func (s *CreateThingHTTPReq) SetProbesHTTP(val []int) {
	s.ProbesHTTP = val
}

type CreateThingReq struct {
	Age      int    `json:"age"`
	Name     string `json:"name"`
	ProbedBy []int  `json:"probed_by"`
}

// GetAge returns the value of Age.
func (s *CreateThingReq) GetAge() int {
	return s.Age
}

// GetName returns the value of Name.
func (s *CreateThingReq) GetName() string {
	return s.Name
}

// GetProbedBy returns the value of ProbedBy.
func (s *CreateThingReq) GetProbedBy() []int {
	return s.ProbedBy
}

// SetAge sets the value of Age.
func (s *CreateThingReq) SetAge(val int) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *CreateThingReq) SetName(val string) {
	s.Name = val
}

// SetProbedBy sets the value of ProbedBy.
func (s *CreateThingReq) SetProbedBy(val []int) {
	s.ProbedBy = val
}

// DeleteThingHTTPNoContent is response for DeleteThingHTTP operation.
type DeleteThingHTTPNoContent struct{}

func (*DeleteThingHTTPNoContent) deleteThingHTTPRes() {}

// DeleteThingNoContent is response for DeleteThing operation.
type DeleteThingNoContent struct{}

func (*DeleteThingNoContent) deleteThingRes() {}

type ListThingHTTPOKApplicationJSON []ThingHTTPList

func (*ListThingHTTPOKApplicationJSON) listThingHTTPRes() {}

type ListThingHTTPProbesHttpOKApplicationJSON []ThingHTTPProbesHTTPList

func (*ListThingHTTPProbesHttpOKApplicationJSON) listThingHTTPProbesHttpRes() {}

type ListThingOKApplicationJSON []ThingList

func (*ListThingOKApplicationJSON) listThingRes() {}

type ListThingProbedByOKApplicationJSON []ThingProbedByList

func (*ListThingProbedByOKApplicationJSON) listThingProbedByRes() {}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type R400 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R400) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R400) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R400) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R400) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R400) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R400) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R400) createThingHTTPRes()         {}
func (*R400) createThingRes()             {}
func (*R400) deleteThingHTTPRes()         {}
func (*R400) deleteThingRes()             {}
func (*R400) listThingHTTPProbesHttpRes() {}
func (*R400) listThingHTTPRes()           {}
func (*R400) listThingProbedByRes()       {}
func (*R400) listThingRes()               {}
func (*R400) readThingHTTPRes()           {}
func (*R400) readThingRes()               {}
func (*R400) updateThingHTTPRes()         {}
func (*R400) updateThingRes()             {}

type R404 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R404) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R404) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R404) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R404) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R404) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R404) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R404) deleteThingHTTPRes()         {}
func (*R404) deleteThingRes()             {}
func (*R404) listThingHTTPProbesHttpRes() {}
func (*R404) listThingHTTPRes()           {}
func (*R404) listThingProbedByRes()       {}
func (*R404) listThingRes()               {}
func (*R404) readThingHTTPRes()           {}
func (*R404) readThingRes()               {}
func (*R404) updateThingHTTPRes()         {}
func (*R404) updateThingRes()             {}

type R409 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R409) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R409) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R409) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R409) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R409) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R409) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R409) createThingHTTPRes()         {}
func (*R409) createThingRes()             {}
func (*R409) deleteThingHTTPRes()         {}
func (*R409) deleteThingRes()             {}
func (*R409) listThingHTTPProbesHttpRes() {}
func (*R409) listThingHTTPRes()           {}
func (*R409) listThingProbedByRes()       {}
func (*R409) listThingRes()               {}
func (*R409) readThingHTTPRes()           {}
func (*R409) readThingRes()               {}
func (*R409) updateThingHTTPRes()         {}
func (*R409) updateThingRes()             {}

type R500 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R500) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R500) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R500) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R500) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R500) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R500) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R500) createThingHTTPRes()         {}
func (*R500) createThingRes()             {}
func (*R500) deleteThingHTTPRes()         {}
func (*R500) deleteThingRes()             {}
func (*R500) listThingHTTPProbesHttpRes() {}
func (*R500) listThingHTTPRes()           {}
func (*R500) listThingProbedByRes()       {}
func (*R500) listThingRes()               {}
func (*R500) readThingHTTPRes()           {}
func (*R500) readThingRes()               {}
func (*R500) updateThingHTTPRes()         {}
func (*R500) updateThingRes()             {}

// Ref: #/components/schemas/ThingCreate
type ThingCreate struct {
	ID   int    `json:"id"`
	Age  int    `json:"age"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *ThingCreate) GetID() int {
	return s.ID
}

// GetAge returns the value of Age.
func (s *ThingCreate) GetAge() int {
	return s.Age
}

// GetName returns the value of Name.
func (s *ThingCreate) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *ThingCreate) SetID(val int) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *ThingCreate) SetAge(val int) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *ThingCreate) SetName(val string) {
	s.Name = val
}

func (*ThingCreate) createThingRes() {}

// Ref: #/components/schemas/ThingHTTPCreate
type ThingHTTPCreate struct {
	ID   int    `json:"id"`
	Age  int    `json:"age"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *ThingHTTPCreate) GetID() int {
	return s.ID
}

// GetAge returns the value of Age.
func (s *ThingHTTPCreate) GetAge() int {
	return s.Age
}

// GetName returns the value of Name.
func (s *ThingHTTPCreate) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *ThingHTTPCreate) SetID(val int) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *ThingHTTPCreate) SetAge(val int) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *ThingHTTPCreate) SetName(val string) {
	s.Name = val
}

func (*ThingHTTPCreate) createThingHTTPRes() {}

// Ref: #/components/schemas/ThingHTTPList
type ThingHTTPList struct {
	ID   int    `json:"id"`
	Age  int    `json:"age"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *ThingHTTPList) GetID() int {
	return s.ID
}

// GetAge returns the value of Age.
func (s *ThingHTTPList) GetAge() int {
	return s.Age
}

// GetName returns the value of Name.
func (s *ThingHTTPList) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *ThingHTTPList) SetID(val int) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *ThingHTTPList) SetAge(val int) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *ThingHTTPList) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/ThingHTTP_ProbesHTTPList
type ThingHTTPProbesHTTPList struct {
	ID   int    `json:"id"`
	Age  int    `json:"age"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *ThingHTTPProbesHTTPList) GetID() int {
	return s.ID
}

// GetAge returns the value of Age.
func (s *ThingHTTPProbesHTTPList) GetAge() int {
	return s.Age
}

// GetName returns the value of Name.
func (s *ThingHTTPProbesHTTPList) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *ThingHTTPProbesHTTPList) SetID(val int) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *ThingHTTPProbesHTTPList) SetAge(val int) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *ThingHTTPProbesHTTPList) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/ThingHTTPRead
type ThingHTTPRead struct {
	ID   int    `json:"id"`
	Age  int    `json:"age"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *ThingHTTPRead) GetID() int {
	return s.ID
}

// GetAge returns the value of Age.
func (s *ThingHTTPRead) GetAge() int {
	return s.Age
}

// GetName returns the value of Name.
func (s *ThingHTTPRead) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *ThingHTTPRead) SetID(val int) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *ThingHTTPRead) SetAge(val int) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *ThingHTTPRead) SetName(val string) {
	s.Name = val
}

func (*ThingHTTPRead) readThingHTTPRes() {}

// Ref: #/components/schemas/ThingHTTPUpdate
type ThingHTTPUpdate struct {
	ID   int    `json:"id"`
	Age  int    `json:"age"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *ThingHTTPUpdate) GetID() int {
	return s.ID
}

// GetAge returns the value of Age.
func (s *ThingHTTPUpdate) GetAge() int {
	return s.Age
}

// GetName returns the value of Name.
func (s *ThingHTTPUpdate) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *ThingHTTPUpdate) SetID(val int) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *ThingHTTPUpdate) SetAge(val int) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *ThingHTTPUpdate) SetName(val string) {
	s.Name = val
}

func (*ThingHTTPUpdate) updateThingHTTPRes() {}

// Ref: #/components/schemas/ThingList
type ThingList struct {
	ID   int    `json:"id"`
	Age  int    `json:"age"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *ThingList) GetID() int {
	return s.ID
}

// GetAge returns the value of Age.
func (s *ThingList) GetAge() int {
	return s.Age
}

// GetName returns the value of Name.
func (s *ThingList) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *ThingList) SetID(val int) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *ThingList) SetAge(val int) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *ThingList) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/Thing_ProbedByList
type ThingProbedByList struct {
	ID   int    `json:"id"`
	Age  int    `json:"age"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *ThingProbedByList) GetID() int {
	return s.ID
}

// GetAge returns the value of Age.
func (s *ThingProbedByList) GetAge() int {
	return s.Age
}

// GetName returns the value of Name.
func (s *ThingProbedByList) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *ThingProbedByList) SetID(val int) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *ThingProbedByList) SetAge(val int) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *ThingProbedByList) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/ThingRead
type ThingRead struct {
	ID   int    `json:"id"`
	Age  int    `json:"age"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *ThingRead) GetID() int {
	return s.ID
}

// GetAge returns the value of Age.
func (s *ThingRead) GetAge() int {
	return s.Age
}

// GetName returns the value of Name.
func (s *ThingRead) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *ThingRead) SetID(val int) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *ThingRead) SetAge(val int) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *ThingRead) SetName(val string) {
	s.Name = val
}

func (*ThingRead) readThingRes() {}

// Ref: #/components/schemas/ThingUpdate
type ThingUpdate struct {
	ID   int    `json:"id"`
	Age  int    `json:"age"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *ThingUpdate) GetID() int {
	return s.ID
}

// GetAge returns the value of Age.
func (s *ThingUpdate) GetAge() int {
	return s.Age
}

// GetName returns the value of Name.
func (s *ThingUpdate) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *ThingUpdate) SetID(val int) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *ThingUpdate) SetAge(val int) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *ThingUpdate) SetName(val string) {
	s.Name = val
}

func (*ThingUpdate) updateThingRes() {}

type UpdateThingHTTPReq struct {
	Age        OptInt    `json:"age"`
	Name       OptString `json:"name"`
	ProbesHTTP []int     `json:"probes_http"`
}

// GetAge returns the value of Age.
func (s *UpdateThingHTTPReq) GetAge() OptInt {
	return s.Age
}

// GetName returns the value of Name.
func (s *UpdateThingHTTPReq) GetName() OptString {
	return s.Name
}

// GetProbesHTTP returns the value of ProbesHTTP.
func (s *UpdateThingHTTPReq) GetProbesHTTP() []int {
	return s.ProbesHTTP
}

// SetAge sets the value of Age.
func (s *UpdateThingHTTPReq) SetAge(val OptInt) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *UpdateThingHTTPReq) SetName(val OptString) {
	s.Name = val
}

// SetProbesHTTP sets the value of ProbesHTTP.
func (s *UpdateThingHTTPReq) SetProbesHTTP(val []int) {
	s.ProbesHTTP = val
}

type UpdateThingReq struct {
	Age      OptInt    `json:"age"`
	Name     OptString `json:"name"`
	ProbedBy []int     `json:"probed_by"`
}

// GetAge returns the value of Age.
func (s *UpdateThingReq) GetAge() OptInt {
	return s.Age
}

// GetName returns the value of Name.
func (s *UpdateThingReq) GetName() OptString {
	return s.Name
}

// GetProbedBy returns the value of ProbedBy.
func (s *UpdateThingReq) GetProbedBy() []int {
	return s.ProbedBy
}

// SetAge sets the value of Age.
func (s *UpdateThingReq) SetAge(val OptInt) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *UpdateThingReq) SetName(val OptString) {
	s.Name = val
}

// SetProbedBy sets the value of ProbedBy.
func (s *UpdateThingReq) SetProbedBy(val []int) {
	s.ProbedBy = val
}
